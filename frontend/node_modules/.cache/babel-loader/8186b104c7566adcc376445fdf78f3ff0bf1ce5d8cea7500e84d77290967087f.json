{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahame\\\\OneDrive\\\\Desktop\\\\connect4\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Trophy, Users, Clock, Wifi, WifiOff } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROWS = 6;\nconst COLS = 7;\nexport default function ConnectFour() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [gameState, setGameState] = useState('login'); // login, waiting, playing, finished\n  const [board, setBoard] = useState(Array(ROWS).fill(null).map(() => Array(COLS).fill(null)));\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  const [myColor, setMyColor] = useState(null);\n  const [opponent, setOpponent] = useState('');\n  const [winner, setWinner] = useState(null);\n  const [message, setMessage] = useState('');\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [connected, setConnected] = useState(false);\n  const [gameId, setGameId] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(10);\n  const ws = useRef(null);\n  useEffect(() => {\n    if (gameState === 'waiting' && timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [gameState, timeLeft]);\n  const connectWebSocket = () => {\n    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n    const wsUrl = `${protocol}//${window.location.hostname}:8080/ws`;\n    ws.current = new WebSocket(wsUrl);\n    ws.current.onopen = () => {\n      setConnected(true);\n      console.log('WebSocket connected');\n    };\n    ws.current.onmessage = event => {\n      const data = JSON.parse(event.data);\n      handleMessage(data);\n    };\n    ws.current.onerror = error => {\n      console.error('WebSocket error:', error);\n      setConnected(false);\n    };\n    ws.current.onclose = () => {\n      setConnected(false);\n      console.log('WebSocket disconnected');\n    };\n  };\n  const handleMessage = data => {\n    console.log('Received message:', data); // Debug log\n\n    switch (data.type) {\n      case 'waiting':\n        setGameState('waiting');\n        setMessage('Waiting for opponent...');\n        setTimeLeft(10);\n        break;\n      case 'game_start':\n        setGameState('playing');\n        setMyColor(data.color);\n        setOpponent(data.opponent);\n        setCurrentPlayer(data.current_player);\n        setGameId(data.game_id);\n        setMessage(`Game started! You are ${data.color.toUpperCase()}. ${data.current_player === data.color ? 'Your turn!' : 'Opponent\\'s turn'}`);\n        setBoard(Array(ROWS).fill(null).map(() => Array(COLS).fill(null)));\n        setWinner(null);\n        break;\n      case 'move':\n        console.log('Move update - Board:', data.board); // Debug log\n        setBoard(data.board);\n        setCurrentPlayer(data.current_player);\n        if (data.current_player === myColor) {\n          setMessage('Your turn!');\n        } else {\n          setMessage('Opponent is thinking...');\n        }\n        break;\n      case 'game_over':\n        setBoard(data.board);\n        setWinner(data.winner);\n        setGameState('finished');\n        if (data.winner === 'draw') {\n          setMessage(\"It's a draw!\");\n        } else if (data.winner === myColor) {\n          setMessage('You won! ðŸŽ‰');\n        } else {\n          setMessage('You lost!');\n        }\n        fetchLeaderboard();\n        break;\n      case 'opponent_disconnected':\n        setMessage('Opponent disconnected. Waiting 30s for reconnection...');\n        break;\n      case 'game_forfeited':\n        setGameState('finished');\n        setMessage('Opponent forfeited. You win!');\n        fetchLeaderboard();\n        break;\n      case 'error':\n        setMessage('Error: ' + data.message);\n        console.error('Game error:', data.message);\n        break;\n      default:\n        console.log('Unknown message type:', data.type);\n    }\n  };\n  const joinGame = () => {\n    if (!username.trim()) {\n      setMessage('Please enter a username');\n      return;\n    }\n    connectWebSocket();\n    setTimeout(() => {\n      if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n        ws.current.send(JSON.stringify({\n          type: 'join',\n          username: username\n        }));\n      }\n    }, 100);\n  };\n  const makeMove = col => {\n    console.log('Attempting move:', {\n      col,\n      gameState,\n      currentPlayer,\n      myColor\n    }); // Debug log\n\n    if (gameState !== 'playing') {\n      console.log('Game not in playing state');\n      setMessage('Game is not active');\n      return;\n    }\n    if (currentPlayer !== myColor) {\n      console.log('Not your turn');\n      setMessage('Wait for your turn!');\n      return;\n    }\n    if (!ws.current || ws.current.readyState !== WebSocket.OPEN) {\n      console.log('WebSocket not connected');\n      setMessage('Connection lost. Reconnecting...');\n      return;\n    }\n    console.log('Sending move to server:', col);\n    ws.current.send(JSON.stringify({\n      type: 'move',\n      column: col\n    }));\n  };\n  const playAgain = () => {\n    setGameState('login');\n    setBoard(Array(ROWS).fill(null).map(() => Array(COLS).fill(null)));\n    setWinner(null);\n    setMessage('');\n    if (ws.current) {\n      ws.current.close();\n    }\n  };\n  const fetchLeaderboard = async () => {\n    try {\n      const response = await fetch(`${window.location.protocol}//${window.location.hostname}:8080/leaderboard`);\n      const data = await response.json();\n      setLeaderboard(data || []);\n    } catch (error) {\n      console.error('Failed to fetch leaderboard:', error);\n    }\n  };\n  useEffect(() => {\n    fetchLeaderboard();\n  }, []);\n  const getCellColor = cell => {\n    if (cell === 'red') return 'bg-red-500';\n    if (cell === 'yellow') return 'bg-yellow-400';\n    return 'bg-white';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-blue-900 via-blue-800 to-purple-900 p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-5xl font-bold text-white mb-2\",\n          children: \"\\uD83C\\uDFAF 4 in a Row\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center gap-2 text-white\",\n          children: [connected ? /*#__PURE__*/_jsxDEV(Wifi, {\n            className: \"w-5 h-5 text-green-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(WifiOff, {\n            className: \"w-5 h-5 text-red-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 72\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: connected ? 'Connected' : 'Disconnected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), gameState === 'login' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-2xl p-8 max-w-md mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gray-800 mb-4\",\n          children: \"Enter Your Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && joinGame(),\n          placeholder: \"Username\",\n          className: \"w-full px-4 py-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: joinGame,\n          className: \"w-full bg-blue-600 text-white py-3 rounded-lg font-semibold hover:bg-blue-700 transition\",\n          children: \"Join Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), gameState === 'waiting' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-2xl p-8 max-w-md mx-auto text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Users, {\n          className: \"w-16 h-16 mx-auto mb-4 text-blue-600 animate-pulse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold text-gray-800 mb-2\",\n          children: \"Waiting for Opponent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center gap-2 text-gray-600 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Bot joins in \", timeLeft, \"s if no player found\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), (gameState === 'playing' || gameState === 'finished') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-3 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg shadow-2xl p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4 p-2 bg-gray-100 rounded text-xs\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"State: \", gameState]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Your Color: \", myColor || 'none']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Current Turn: \", currentPlayer || 'none']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Can Move: \", gameState === 'playing' && currentPlayer === myColor ? 'YES' : 'NO']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"WS Status: \", connected ? 'Connected' : 'Disconnected']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4 flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: myColor === 'red' ? 'text-red-600' : 'text-yellow-600',\n                  children: [\"You (\", username, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"mx-2\",\n                  children: \"vs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: myColor === 'red' ? 'text-yellow-600' : 'text-red-600',\n                  children: opponent\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this), gameState === 'playing' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `px-4 py-2 rounded-lg font-semibold ${currentPlayer === myColor ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'}`,\n                children: currentPlayer === myColor ? 'Your Turn' : \"Opponent's Turn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `mb-4 p-3 rounded-lg text-center font-semibold ${message.includes('won') || message.includes('win') ? 'bg-green-100 text-green-800' : message.includes('lost') ? 'bg-red-100 text-red-800' : 'bg-blue-100 text-blue-800'}`,\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-600 rounded-lg p-4 inline-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid gap-2 mb-2\",\n                style: {\n                  gridTemplateColumns: `repeat(${COLS}, 1fr)`\n                },\n                children: Array(COLS).fill(0).map((_, colIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => makeMove(colIdx),\n                  className: `w-16 h-8 flex items-center justify-center text-white font-bold ${gameState === 'playing' && currentPlayer === myColor ? 'cursor-pointer hover:bg-blue-500 rounded-t-lg transition' : 'cursor-not-allowed opacity-50'}`,\n                  children: gameState === 'playing' && currentPlayer === myColor && 'â†“'\n                }, `col-${colIdx}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid gap-2\",\n                style: {\n                  gridTemplateColumns: `repeat(${COLS}, 1fr)`\n                },\n                children: board.map((row, rowIdx) => row.map((cell, colIdx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `w-16 h-16 rounded-full ${getCellColor(cell)} border-4 border-blue-700 shadow-inner`\n                }, `${rowIdx}-${colIdx}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 25\n                }, this)))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), gameState === 'finished' && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: playAgain,\n              className: \"mt-4 w-full bg-blue-600 text-white py-3 rounded-lg font-semibold hover:bg-blue-700 transition\",\n              children: \"Play Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-2xl p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2 mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(Trophy, {\n              className: \"w-6 h-6 text-yellow-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-bold text-gray-800\",\n              children: \"Leaderboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: leaderboard.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500 text-center py-4\",\n              children: \"No games played yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this) : leaderboard.map((player, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center p-3 bg-gray-50 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center gap-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-lg font-bold text-gray-600\",\n                  children: [\"#\", idx + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `font-semibold ${player.username === username ? 'text-blue-600' : 'text-gray-800'}`,\n                  children: player.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-lg font-bold text-green-600\",\n                children: [player.wins, \" wins\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 23\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n_s(ConnectFour, \"cWeoPGm1Q5M2x9Lr95Vyke4QQL0=\");\n_c = ConnectFour;\nvar _c;\n$RefreshReg$(_c, \"ConnectFour\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Trophy","Users","Clock","Wifi","WifiOff","jsxDEV","_jsxDEV","ROWS","COLS","ConnectFour","_s","username","setUsername","gameState","setGameState","board","setBoard","Array","fill","map","currentPlayer","setCurrentPlayer","myColor","setMyColor","opponent","setOpponent","winner","setWinner","message","setMessage","leaderboard","setLeaderboard","connected","setConnected","gameId","setGameId","timeLeft","setTimeLeft","ws","timer","setTimeout","clearTimeout","connectWebSocket","protocol","window","location","wsUrl","hostname","current","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","handleMessage","onerror","error","onclose","type","color","current_player","game_id","toUpperCase","fetchLeaderboard","joinGame","trim","readyState","OPEN","send","stringify","makeMove","col","column","playAgain","close","response","fetch","json","getCellColor","cell","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onKeyPress","key","placeholder","onClick","includes","style","gridTemplateColumns","_","colIdx","row","rowIdx","length","player","idx","wins","_c","$RefreshReg$"],"sources":["C:/Users/ahame/OneDrive/Desktop/connect4/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Trophy, Users, Clock, Wifi, WifiOff } from 'lucide-react';\r\n\r\nconst ROWS = 6;\r\nconst COLS = 7;\r\n\r\nexport default function ConnectFour() {\r\n  const [username, setUsername] = useState('');\r\n  const [gameState, setGameState] = useState('login'); // login, waiting, playing, finished\r\n  const [board, setBoard] = useState(Array(ROWS).fill(null).map(() => Array(COLS).fill(null)));\r\n  const [currentPlayer, setCurrentPlayer] = useState(null);\r\n  const [myColor, setMyColor] = useState(null);\r\n  const [opponent, setOpponent] = useState('');\r\n  const [winner, setWinner] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [leaderboard, setLeaderboard] = useState([]);\r\n  const [connected, setConnected] = useState(false);\r\n  const [gameId, setGameId] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(10);\r\n  \r\n  const ws = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (gameState === 'waiting' && timeLeft > 0) {\r\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [gameState, timeLeft]);\r\n\r\n  const connectWebSocket = () => {\r\n    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\r\n    const wsUrl = `${protocol}//${window.location.hostname}:8080/ws`;\r\n    \r\n    ws.current = new WebSocket(wsUrl);\r\n    \r\n    ws.current.onopen = () => {\r\n      setConnected(true);\r\n      console.log('WebSocket connected');\r\n    };\r\n    \r\n    ws.current.onmessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      handleMessage(data);\r\n    };\r\n    \r\n    ws.current.onerror = (error) => {\r\n      console.error('WebSocket error:', error);\r\n      setConnected(false);\r\n    };\r\n    \r\n    ws.current.onclose = () => {\r\n      setConnected(false);\r\n      console.log('WebSocket disconnected');\r\n    };\r\n  };\r\n\r\n  const handleMessage = (data) => {\r\n    console.log('Received message:', data); // Debug log\r\n    \r\n    switch (data.type) {\r\n      case 'waiting':\r\n        setGameState('waiting');\r\n        setMessage('Waiting for opponent...');\r\n        setTimeLeft(10);\r\n        break;\r\n        \r\n      case 'game_start':\r\n        setGameState('playing');\r\n        setMyColor(data.color);\r\n        setOpponent(data.opponent);\r\n        setCurrentPlayer(data.current_player);\r\n        setGameId(data.game_id);\r\n        setMessage(`Game started! You are ${data.color.toUpperCase()}. ${data.current_player === data.color ? 'Your turn!' : 'Opponent\\'s turn'}`);\r\n        setBoard(Array(ROWS).fill(null).map(() => Array(COLS).fill(null)));\r\n        setWinner(null);\r\n        break;\r\n        \r\n      case 'move':\r\n        console.log('Move update - Board:', data.board); // Debug log\r\n        setBoard(data.board);\r\n        setCurrentPlayer(data.current_player);\r\n        if (data.current_player === myColor) {\r\n          setMessage('Your turn!');\r\n        } else {\r\n          setMessage('Opponent is thinking...');\r\n        }\r\n        break;\r\n        \r\n      case 'game_over':\r\n        setBoard(data.board);\r\n        setWinner(data.winner);\r\n        setGameState('finished');\r\n        if (data.winner === 'draw') {\r\n          setMessage(\"It's a draw!\");\r\n        } else if (data.winner === myColor) {\r\n          setMessage('You won! ðŸŽ‰');\r\n        } else {\r\n          setMessage('You lost!');\r\n        }\r\n        fetchLeaderboard();\r\n        break;\r\n        \r\n      case 'opponent_disconnected':\r\n        setMessage('Opponent disconnected. Waiting 30s for reconnection...');\r\n        break;\r\n        \r\n      case 'game_forfeited':\r\n        setGameState('finished');\r\n        setMessage('Opponent forfeited. You win!');\r\n        fetchLeaderboard();\r\n        break;\r\n        \r\n      case 'error':\r\n        setMessage('Error: ' + data.message);\r\n        console.error('Game error:', data.message);\r\n        break;\r\n        \r\n      default:\r\n        console.log('Unknown message type:', data.type);\r\n    }\r\n  };\r\n\r\n  const joinGame = () => {\r\n    if (!username.trim()) {\r\n      setMessage('Please enter a username');\r\n      return;\r\n    }\r\n    connectWebSocket();\r\n    setTimeout(() => {\r\n      if (ws.current && ws.current.readyState === WebSocket.OPEN) {\r\n        ws.current.send(JSON.stringify({\r\n          type: 'join',\r\n          username: username\r\n        }));\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  const makeMove = (col) => {\r\n    console.log('Attempting move:', { col, gameState, currentPlayer, myColor }); // Debug log\r\n    \r\n    if (gameState !== 'playing') {\r\n      console.log('Game not in playing state');\r\n      setMessage('Game is not active');\r\n      return;\r\n    }\r\n    \r\n    if (currentPlayer !== myColor) {\r\n      console.log('Not your turn');\r\n      setMessage('Wait for your turn!');\r\n      return;\r\n    }\r\n    \r\n    if (!ws.current || ws.current.readyState !== WebSocket.OPEN) {\r\n      console.log('WebSocket not connected');\r\n      setMessage('Connection lost. Reconnecting...');\r\n      return;\r\n    }\r\n    \r\n    console.log('Sending move to server:', col);\r\n    ws.current.send(JSON.stringify({\r\n      type: 'move',\r\n      column: col\r\n    }));\r\n  };\r\n\r\n  const playAgain = () => {\r\n    setGameState('login');\r\n    setBoard(Array(ROWS).fill(null).map(() => Array(COLS).fill(null)));\r\n    setWinner(null);\r\n    setMessage('');\r\n    if (ws.current) {\r\n      ws.current.close();\r\n    }\r\n  };\r\n\r\n  const fetchLeaderboard = async () => {\r\n    try {\r\n      const response = await fetch(`${window.location.protocol}//${window.location.hostname}:8080/leaderboard`);\r\n      const data = await response.json();\r\n      setLeaderboard(data || []);\r\n    } catch (error) {\r\n      console.error('Failed to fetch leaderboard:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchLeaderboard();\r\n  }, []);\r\n\r\n  const getCellColor = (cell) => {\r\n    if (cell === 'red') return 'bg-red-500';\r\n    if (cell === 'yellow') return 'bg-yellow-400';\r\n    return 'bg-white';\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-900 via-blue-800 to-purple-900 p-8\">\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        <div className=\"text-center mb-8\">\r\n          <h1 className=\"text-5xl font-bold text-white mb-2\">ðŸŽ¯ 4 in a Row</h1>\r\n          <div className=\"flex items-center justify-center gap-2 text-white\">\r\n            {connected ? <Wifi className=\"w-5 h-5 text-green-400\" /> : <WifiOff className=\"w-5 h-5 text-red-400\" />}\r\n            <span className=\"text-sm\">{connected ? 'Connected' : 'Disconnected'}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {gameState === 'login' && (\r\n          <div className=\"bg-white rounded-lg shadow-2xl p-8 max-w-md mx-auto\">\r\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-4\">Enter Your Username</h2>\r\n            <input\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              onKeyPress={(e) => e.key === 'Enter' && joinGame()}\r\n              placeholder=\"Username\"\r\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-lg mb-4 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n            <button\r\n              onClick={joinGame}\r\n              className=\"w-full bg-blue-600 text-white py-3 rounded-lg font-semibold hover:bg-blue-700 transition\"\r\n            >\r\n              Join Game\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {gameState === 'waiting' && (\r\n          <div className=\"bg-white rounded-lg shadow-2xl p-8 max-w-md mx-auto text-center\">\r\n            <Users className=\"w-16 h-16 mx-auto mb-4 text-blue-600 animate-pulse\" />\r\n            <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Waiting for Opponent</h2>\r\n            <div className=\"flex items-center justify-center gap-2 text-gray-600 mb-4\">\r\n              <Clock className=\"w-5 h-5\" />\r\n              <span>Bot joins in {timeLeft}s if no player found</span>\r\n            </div>\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n          </div>\r\n        )}\r\n\r\n        {(gameState === 'playing' || gameState === 'finished') && (\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n            <div className=\"lg:col-span-2\">\r\n              <div className=\"bg-white rounded-lg shadow-2xl p-6\">\r\n                {/* Debug Info - Remove this after testing */}\r\n                <div className=\"mb-4 p-2 bg-gray-100 rounded text-xs\">\r\n                  <div>State: {gameState}</div>\r\n                  <div>Your Color: {myColor || 'none'}</div>\r\n                  <div>Current Turn: {currentPlayer || 'none'}</div>\r\n                  <div>Can Move: {(gameState === 'playing' && currentPlayer === myColor) ? 'YES' : 'NO'}</div>\r\n                  <div>WS Status: {connected ? 'Connected' : 'Disconnected'}</div>\r\n                </div>\r\n\r\n                <div className=\"mb-4 flex justify-between items-center\">\r\n                  <div className=\"text-lg font-semibold\">\r\n                    <span className={myColor === 'red' ? 'text-red-600' : 'text-yellow-600'}>\r\n                      You ({username})\r\n                    </span>\r\n                    <span className=\"mx-2\">vs</span>\r\n                    <span className={myColor === 'red' ? 'text-yellow-600' : 'text-red-600'}>\r\n                      {opponent}\r\n                    </span>\r\n                  </div>\r\n                  {gameState === 'playing' && (\r\n                    <div className={`px-4 py-2 rounded-lg font-semibold ${\r\n                      currentPlayer === myColor ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\r\n                    }`}>\r\n                      {currentPlayer === myColor ? 'Your Turn' : \"Opponent's Turn\"}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {message && (\r\n                  <div className={`mb-4 p-3 rounded-lg text-center font-semibold ${\r\n                    message.includes('won') || message.includes('win') ? 'bg-green-100 text-green-800' :\r\n                    message.includes('lost') ? 'bg-red-100 text-red-800' :\r\n                    'bg-blue-100 text-blue-800'\r\n                  }`}>\r\n                    {message}\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"bg-blue-600 rounded-lg p-4 inline-block\">\r\n                  {/* Column click area above board */}\r\n                  <div className=\"grid gap-2 mb-2\" style={{ gridTemplateColumns: `repeat(${COLS}, 1fr)` }}>\r\n                    {Array(COLS).fill(0).map((_, colIdx) => (\r\n                      <div\r\n                        key={`col-${colIdx}`}\r\n                        onClick={() => makeMove(colIdx)}\r\n                        className={`w-16 h-8 flex items-center justify-center text-white font-bold ${\r\n                          gameState === 'playing' && currentPlayer === myColor \r\n                            ? 'cursor-pointer hover:bg-blue-500 rounded-t-lg transition' \r\n                            : 'cursor-not-allowed opacity-50'\r\n                        }`}\r\n                      >\r\n                        {gameState === 'playing' && currentPlayer === myColor && 'â†“'}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  \r\n                  {/* Game board */}\r\n                  <div className=\"grid gap-2\" style={{ gridTemplateColumns: `repeat(${COLS}, 1fr)` }}>\r\n                    {board.map((row, rowIdx) =>\r\n                      row.map((cell, colIdx) => (\r\n                        <div\r\n                          key={`${rowIdx}-${colIdx}`}\r\n                          className={`w-16 h-16 rounded-full ${getCellColor(cell)} border-4 border-blue-700 shadow-inner`}\r\n                        />\r\n                      ))\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {gameState === 'finished' && (\r\n                  <button\r\n                    onClick={playAgain}\r\n                    className=\"mt-4 w-full bg-blue-600 text-white py-3 rounded-lg font-semibold hover:bg-blue-700 transition\"\r\n                  >\r\n                    Play Again\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"bg-white rounded-lg shadow-2xl p-6\">\r\n              <div className=\"flex items-center gap-2 mb-4\">\r\n                <Trophy className=\"w-6 h-6 text-yellow-500\" />\r\n                <h3 className=\"text-xl font-bold text-gray-800\">Leaderboard</h3>\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                {leaderboard.length === 0 ? (\r\n                  <p className=\"text-gray-500 text-center py-4\">No games played yet</p>\r\n                ) : (\r\n                  leaderboard.map((player, idx) => (\r\n                    <div key={idx} className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <span className=\"text-lg font-bold text-gray-600\">#{idx + 1}</span>\r\n                        <span className={`font-semibold ${player.username === username ? 'text-blue-600' : 'text-gray-800'}`}>\r\n                          {player.username}\r\n                        </span>\r\n                      </div>\r\n                      <span className=\"text-lg font-bold text-green-600\">{player.wins} wins</span>\r\n                    </div>\r\n                  ))\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}